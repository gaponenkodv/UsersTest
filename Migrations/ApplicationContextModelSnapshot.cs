// <auto-generated />
using System;
using AppTest.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AppTest.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AppTest.Db.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Redactor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("AppTest.Db.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.ru",
                            Login = "admin",
                            Name = "Name",
                            PasswordHash = new byte[] { 125, 211, 69, 153, 203, 107, 50, 186, 245, 92, 86, 3, 18, 235, 59, 57, 198, 155, 146, 164, 144, 107, 183, 15, 220, 33, 54, 228, 76, 222, 170, 82, 124, 187, 7, 9, 179, 150, 183, 167, 24, 6, 5, 241, 191, 109, 128, 90, 41, 154, 188, 158, 161, 180, 138, 173, 198, 19, 251, 71, 167, 246, 235, 111 },
                            PasswordSalt = new byte[] { 172, 94, 173, 57, 232, 187, 56, 203, 134, 147, 125, 25, 216, 90, 143, 236, 11, 11, 64, 131, 151, 123, 241, 175, 70, 152, 188, 52, 179, 39, 19, 123, 60, 252, 207, 1, 136, 108, 61, 136, 145, 106, 246, 69, 15, 222, 18, 26, 181, 38, 39, 240, 1, 71, 30, 92, 47, 231, 41, 140, 214, 132, 129, 21, 117, 143, 144, 194, 136, 229, 180, 73, 164, 1, 81, 165, 233, 60, 40, 34, 237, 143, 220, 158, 119, 101, 46, 79, 188, 144, 9, 60, 169, 100, 69, 193, 74, 7, 174, 180, 64, 159, 200, 120, 144, 131, 237, 160, 77, 71, 158, 40, 20, 82, 49, 162, 81, 172, 191, 54, 117, 217, 190, 63, 212, 183, 170, 94 }
                        });
                });

            modelBuilder.Entity("AppTest.Db.Models.Role", b =>
                {
                    b.HasOne("AppTest.Db.Models.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AppTest.Db.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
